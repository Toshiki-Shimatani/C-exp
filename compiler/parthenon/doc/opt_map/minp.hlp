  minp command

  (A) FUNCTION

  Minp command adds a constraint to a pin of top module.

  (B) SYNOPSIS

  min / <pin name> <value> [ <constraint name> ]
  min \ <pin name> <value> [ <constraint name> ]
  min % <pin name> <vaule> [ <constraint name> ]
  min /            <value> [ <constraint name> ]
  min \            <value> [ <constraint name> ] 
  min %            <value> [ <constraint name> ]

  (C) PARAMETERS

  / : means 'rising'.
  \ : means 'falling'.
  % : means 'unstable'.
  ~ : means 'ability to drive load'.

  pin name: tells a name in top module.

  constraint name: names the constraint to be added for later refering
                   (optional).

  value ::= +12.333
        | 0.23
        | .12
        | 2
        | -1
        | -1.33
        | -0.00023
        | 2e5
        | 2E3
        | -2.3e-4
        | +.1e3  etc.

  Note that '0.00' or other redundant forms do not mean zero: only '0' means zero.

  (D) NOTES

  * The form without pin name does the addition to all the meaningful
    (see below) pins in top module. A regular expression can be used
    as the pin name, which specifies all the meaningful pins in top
    module that match the expression in their name.

  * A usage 'min /abc 10 ct1' claims that the arrival time of rising
    events at an output pin 'abc' in top module must not be faster than
    10 (i.e., at least 10), and it names the constraint as 'ct1'.

  * The above term 'meaningful' means that only input or bidirect pins
    in top modules are 'meaningful' for load constraints, whereas only
    output or bidirect pins are 'meaningful' for event constraints.
    Whether a given pin is meaningful or not is determined by what
    type it was on opt_map's startup. More informations on this topic
    is available in the help of setp command.

  (E) SEE ALSO

  max, reset
